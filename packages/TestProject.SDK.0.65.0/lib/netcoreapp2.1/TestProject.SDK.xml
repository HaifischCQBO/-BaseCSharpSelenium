<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestProject.SDK</name>
    </assembly>
    <members>
        <member name="T:TestProject.SDK.Addons.Actions.IActionEx`1">
            <summary>
            Represents a generic action using a specific driver
            </summary>
            <typeparam name="TDriver">Driver type</typeparam>
        </member>
        <member name="M:TestProject.SDK.Addons.Actions.IActionEx`1.Execute(TestProject.SDK.Addons.Helpers.AddonHelperEx{`0})">
            <summary>
            Execution method for this action
            </summary>
            <param name="helper">A helper instance used when action is executed</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Addons.Actions.IAndroidAction">
            <summary>
            Represents an android action
            </summary>
        </member>
        <member name="M:TestProject.SDK.Addons.Actions.IAndroidAction.Execute(TestProject.SDK.Addons.Helpers.AndroidAddonHelper)">
            <summary>
            Execution method for this action
            </summary>
            <param name="helper">A helper instance used when action is executed</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Addons.Actions.IGenericAction">
            <summary>
            Represents a Generic (Driverless) action
            </summary>
        </member>
        <member name="M:TestProject.SDK.Addons.Actions.IGenericAction.Execute(TestProject.SDK.Addons.Helpers.GenericAddonHelper)">
            <summary>
            Execution method for this test
            </summary>
            <param name="helper">A helper instance providing access to various addon resources</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Addons.Actions.IIOSAction">
            <summary>
            Represents user-developed iOS actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Addons.Actions.IIOSAction.Execute(TestProject.SDK.Addons.Helpers.IOSAddonHelper)">
            <summary>
            This method is invoked when the action is executed by TestProject Agent
            </summary>
            <param name="helper">A helper object providing access to driver and other addon resources</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Addons.Actions.IWebAction">
            <summary>
            Represents user-developed Web actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Addons.Actions.IWebAction.Execute(TestProject.SDK.Addons.Helpers.WebAddonHelper)">
            <summary>
            This method is invoked when the action is executed by TestProject Agent
            </summary>
            <param name="helper">A helper object providing access to driver and other addon resources</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Addons.ElementAction.IAndroidElementAction">
            <summary>
            Represents user-developed Android Element-Based actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Addons.ElementAction.IAndroidElementAction.Execute(TestProject.SDK.Addons.Helpers.AndroidAddonHelper,OpenQA.Selenium.Appium.Android.AndroidElement)">
            <summary>
            This method is invoked when the action is executed by TestProject Agent
            </summary>
            <param name="helper">A helper object providing access to driver and other addon resources</param>
            <param name="element">The element this action operates on</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Addons.ElementAction.IElementActionEx`2">
            <summary>
            Represents user-developed Custom Element-Based actions
            </summary>
            <typeparam name="TDriver">Action's driver type</typeparam>
            <typeparam name="TElement">Action's element type</typeparam>
        </member>
        <member name="M:TestProject.SDK.Addons.ElementAction.IElementActionEx`2.Execute(TestProject.SDK.Addons.Helpers.AddonHelperEx{`0},`1)">
            <summary>
            This method is invoked when the action is executed by TestProject Agent
            </summary>
            <param name="helper">A helper object providing access to driver and other addon resources</param>
            <param name="element">The element this action operates on</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Addons.ElementAction.IIOSElementAction">
            <summary>
            Represents user-developed iOS Element-Based actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Addons.ElementAction.IIOSElementAction.Execute(TestProject.SDK.Addons.Helpers.IOSAddonHelper,OpenQA.Selenium.Appium.iOS.IOSElement)">
            <summary>
            This method is invoked when the action is executed by TestProject Agent
            </summary>
            <param name="helper">A helper object providing access to driver and other addon resources</param>
            <param name="element">The element this action operates on</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Addons.ElementAction.IWebElementAction">
            <summary>
            Represents user-developed Web Element-Based actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Addons.ElementAction.IWebElementAction.Execute(TestProject.SDK.Addons.Helpers.WebAddonHelper,OpenQA.Selenium.IWebElement)">
            <summary>
            This method is invoked when the action is executed by TestProject Agent
            </summary>
            <param name="helper">A helper object providing access to driver and other addon resources</param>
            <param name="element">The element this action operates on</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Addons.HelperBase">
            <summary>
            An abstract helper base class 
            </summary>
        </member>
        <member name="M:TestProject.SDK.Addons.HelperBase.GetContext">
            <summary>
            Retrieves the execution context from TestProject Agent
            </summary>
            <returns>Agent's execution context</returns>
        </member>
        <member name="T:TestProject.SDK.Addons.Helpers.AddonHelperEx`1">
            <summary>
            Provides access to driver and other Addon resources 
            </summary>
            <typeparam name="TDriver">Driver type</typeparam>
        </member>
        <member name="P:TestProject.SDK.Addons.Helpers.AddonHelperEx`1.Reporter">
            <summary>
            An object used to report additional information from the action
            </summary>
        </member>
        <member name="T:TestProject.SDK.Addons.Helpers.AndroidAddonHelper">
             <summary>
            Provides access to driver and other Android action resources 
             </summary>
        </member>
        <member name="T:TestProject.SDK.Addons.Helpers.GenericAddonHelper">
            <summary>
            Provides access to various Addon resources 
            </summary>
        </member>
        <member name="P:TestProject.SDK.Addons.Helpers.GenericAddonHelper.Reporter">
            <summary>
            An object used to report additional information from the action
            </summary>
        </member>
        <member name="P:TestProject.SDK.Addons.Helpers.GenericAddonHelper.Timeout">
            <summary>
            Sets the timeout for TestProject actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Addons.Helpers.GenericAddonHelper.TestProject">
            <summary>
            Provides access to various generic TestProject actions
            </summary>
            <returns></returns>
        </member>
        <member name="T:TestProject.SDK.Addons.Helpers.IOSAddonHelper">
             <summary>
            Provides access to driver and other iOS action resources 
             </summary>
        </member>
        <member name="T:TestProject.SDK.Addons.Helpers.WebAddonHelper">
            <summary>
            Provides access to driver and other Web action resources 
            </summary>
        </member>
        <member name="T:TestProject.SDK.Addons.HelperWithDriver`1">
            <summary>
            An abstract base class
            </summary>
            <typeparam name="TDriver"></typeparam>
        </member>
        <member name="P:TestProject.SDK.Addons.HelperWithDriver`1.Driver">
            <summary>
            Returns an instance of TestProject driver
            </summary>
        </member>
        <member name="T:TestProject.SDK.Drivers.Actions.Actions">
            <summary>
            Provides access to TestProject actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.Actions.Pause(System.Int32)">
            <summary>
            Pauses the execution for <paramref name="milliseconds"/>
            </summary>
            <param name="milliseconds">The number of milliseconds to wait before execution continues</param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="T:TestProject.SDK.Drivers.Actions.AndroidActions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.AndroidActions.SendKeyEvent(System.Int32)">
            <summary>
            Sends a key event with the provided <paramref name="key"/> code
            </summary>
            <param name="key">code for the key pressed on the device</param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.AndroidActions.StartActivity(System.String,System.String,System.String,System.String)">
            <summary>
            Starts activity <paramref name="appPackage"/>/<paramref name="appActivity"/>
            </summary>
            <param name="appPackage"></param>
            <param name="appActivity"></param>
            <param name="appWaitPackage"></param>
            <param name="appWaitActivity"></param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="T:TestProject.SDK.Drivers.Actions.DriverActions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.SendKeys(System.String)">
            <summary>
            Sends <paramref name="keys"/> sequence into an editable element
            </summary>
            <param name="keys">keys to send</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.IsSelected(OpenQA.Selenium.By)">
            <summary>
            Is element selected?
            </summary>
            <param name="by">Element search criteria</param>
            <returns>True if selected, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.IsPresent(OpenQA.Selenium.By)">
            <summary>
            Is element present?
            </summary>
            <param name="by">Element search criteria</param>
            <returns>True if present, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.IsVisible(OpenQA.Selenium.By)">
            <summary>
            Is element visible?
            </summary>
            <param name="by">Element search criteria</param>
            <returns>True if visible, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.ContainsText(OpenQA.Selenium.By,System.String)">
            <summary>
            Element contains <paramref name="text"/>?
            </summary>
            <param name="by">Element search criteria</param>
            <param name="text">Text to search for</param>
            <returns>True if contains text, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.IsClickable(OpenQA.Selenium.By)">
            <summary>
            Is element clickable?
            </summary>
            <param name="by">Element search criteria</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.ClickIfVisible(OpenQA.Selenium.By)">
            <summary>
            Clicks on the element if it's visible
            </summary>
            <param name="by">Element search criteria</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.IsInvisible(OpenQA.Selenium.By)">
            <summary>
            Is element invisible?
            </summary>
            <param name="by">Element search criteria</param>
            <returns>True if invisible, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.TypeText(OpenQA.Selenium.By,System.String)">
            <summary>
            Types <paramref name="keys"/> in element
            </summary>
            <param name="by">Element search criteria</param>
            <param name="keys"></param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.ClearContents(OpenQA.Selenium.By)">
            <summary>
            Clears element contents
            </summary>
            <param name="by">Element search criteria</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.GetText(OpenQA.Selenium.By)">
            <summary>
            Gets the text from the given element
            </summary>
            <param name="by">Element search criteria</param>
            <returns>The text of the element</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.Click(OpenQA.Selenium.By)">
            <summary>
            Clicks the element
            </summary>
            <param name="by">Element search criteria</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.DriverActions.GetTitle">
            <summary>
            Retrieves the title of a browser or an application
            </summary>
            <returns>The title of the browser/application</returns>
        </member>
        <member name="T:TestProject.SDK.Drivers.Actions.IOSActions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="T:TestProject.SDK.Drivers.Actions.MobileActions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.MobileActions.LongPressGesture(OpenQA.Selenium.By)">
            <summary>
            Makes a long press gesture on the element found by <paramref name="by"/>
            </summary>
            <param name="by">Element search criteria</param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.MobileActions.CloseApp">
            <summary>
            Closes the application
            </summary>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.MobileActions.ResetApp">
            <summary>
            Resets the application
            </summary>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.MobileActions.LaunchApp">
            <summary>
            Launches the application
            </summary>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.MobileActions.TapGestureAtCoordinates(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Taps at (<paramref name="x"/>, <paramref name="y"/>) with specified amount of <paramref name="fingers"/>, for <paramref name="duration"/> in milliseconds
            </summary>
            <param name="x">x coordinate to tap at</param>
            <param name="y">y coordinate to tap at</param>
            <param name="fingers">number of fingers/appendages to tap with</param>
            <param name="duration">how long between pressing down, and lifting fingers/appendages</param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.MobileActions.SwipeGesture(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Makes a Swipe gesture from the start point (<paramref name="startX"/>, <paramref name="startY"/>) to the end point (<paramref name="endX"/>, <paramref name="endY"/>), for a specified <paramref name="duration"/> in milliseconds
            </summary>
            <param name="startX">starting x coordinate</param>
            <param name="startY">starting y coordinate</param>
            <param name="endX">ending x coordinate</param>
            <param name="endY">ending y coordinate</param>
            <param name="duration">amount of time in milliseconds for the entire swipe action to take</param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.MobileActions.Tap(OpenQA.Selenium.By)">
            <summary>
            Taps an element found by <paramref name="by"/>
            </summary>
            <param name="by">Element search criteria</param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="T:TestProject.SDK.Drivers.Actions.WebActions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.WebActions.MoveMouseToElement(OpenQA.Selenium.By)">
            <summary>
            Moves the mouse to the middle of an element found by <paramref name="by"/>, and scrolls it into view
            </summary>
            <param name="by">Element search criteria</param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.WebActions.NavigateForward">
            <summary>
            Navigates forward
            </summary>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.WebActions.Refresh">
            <summary>
            Refreshes the current browser tab
            </summary>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.WebActions.NavigateBack">
            <summary>
            Navigates back
            </summary>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.WebActions.NavigateToURL(System.String)">
            <summary>
            Navigates to the specified <paramref name="url"/>
            </summary>
            <param name="url">The target URL</param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.WebActions.ScrollWindow(System.Int32,System.Int32)">
            <summary>
            Scrolls window by the given (<paramref name="x"/>, <paramref name="y"/>) coordinates
            </summary>
            <param name="x">Amount of pixels to scroll on X axis. A negative value means opposite direction</param>
            <param name="y">Amount of pixels to scroll on Y axis. A negative value means opposite direction</param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.WebActions.GetCurrentURL">
            <summary>
            Retrieves the current URL
            </summary>
            <returns>current URL</returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.WebActions.SelectAnOptionByValue(OpenQA.Selenium.By,System.String)">
            <summary>
            Selects an option by value
            </summary>
            <param name="by">Element search criteria</param>
            <param name="value">The value of the option to select</param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.WebActions.SwitchToWindow(System.Int32)">
            <summary>
            Switches to a different window with provided <paramref name="index"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.Actions.WebActions.CloseWindow(System.Int32)">
            <summary>
            Closes a window with provided <paramref name="index"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:TestProject.SDK.Drivers.AndroidDriver`1">
            <summary>
            TestProject Android Driver
            </summary>
            <typeparam name="TElement">Type of element this driver works on</typeparam>
        </member>
        <member name="P:TestProject.SDK.Drivers.AndroidDriver`1.Timeout">
            <summary>
            Changes the timeout on various TestProject actions
            </summary>
        </member>
        <member name="P:TestProject.SDK.Drivers.AndroidDriver`1.ExceptionHandler">
            <summary>
            The custom exception handler
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.AndroidDriver`1.Execute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes a <paramref name="driverCommandToExecute"/> with the provided <paramref name="parameters"/>
            </summary>
            <param name="driverCommandToExecute"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.AndroidDriver`1.TestProject">
            <summary>
            Gives access to TestProject-supplied actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.AndroidDriver`1.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds an Android element using <paramref name="by"/> search criteria
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="T:TestProject.SDK.Drivers.CallStack.IMethodAnalyzer">
            <summary>
            analyzes a method in the stack trace and determines if it's a test class
            </summary>
        </member>
        <member name="T:TestProject.SDK.Drivers.CallStack.StackTraceHelper">
            <summary>
            Helps analyzing stack trace
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.CallStack.StackTraceHelper.TryDetectTestClass">
            <summary>
            Checks if we're running inside a test method (such as NUnit test) and returns said method
            If no such method is found, attempts to detect the method that called the runner
            </summary>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.CallStack.StackTraceHelper.IsRunningWithRepeats">
            <summary>
            Checks whether we are running inside <see cref="M:OpenQA.Selenium.Support.UI.IWait`1.Until``1(System.Func{`0,``0})"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:TestProject.SDK.Drivers.DriverHelper.FindElementOverride">
            <summary>
            overrides FindElement to return this element instead.
            used for unit testing purposes
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.DriverHelper.Reset">
            <summary>
            Used by testing methods only to isolate
            </summary>
        </member>
        <member name="T:TestProject.SDK.Drivers.DriverNextAction">
            <summary>
            Used by exception handlers to specify what driver should do in case action failed
            </summary>
        </member>
        <member name="T:TestProject.SDK.Drivers.ErrorHandling.ICustomExceptionHandler">
            <summary>
            Implement to create a custom exception handler for a driver
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.ErrorHandling.ICustomExceptionHandler.HandleWebDriverException(TestProject.SDK.Drivers.ErrorHandling.IDriverExceptionHandler,OpenQA.Selenium.WebDriverException,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Handles an exception raised by WebDriver
            </summary>
            <param name="driver">The driver instance</param>
            <param name="ex">The exception raise</param>
            <param name="driverCommand">Driver command being executed</param>
            <param name="parameters">Driver command parameters</param>
            <returns>Value indicating whether should abort or retry</returns>
        </member>
        <member name="T:TestProject.SDK.Drivers.ErrorHandling.IDriverExceptionHandler">
            <summary>
            Internal interface implemented by TestProject drivers
            </summary>
        </member>
        <member name="P:TestProject.SDK.Drivers.ErrorHandling.IDriverExceptionHandler.ExceptionHandler">
            <summary>
            the custom exception handler 
            </summary>
        </member>
        <member name="T:TestProject.SDK.Drivers.IOSDriver`1">
            <summary>
            TestProject iOS Driver
            </summary>
            <typeparam name="TElement">Type of element this driver works on</typeparam>
        </member>
        <member name="P:TestProject.SDK.Drivers.IOSDriver`1.Timeout">
            <summary>
            Changes the timeout on various TestProject actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.IOSDriver`1.Execute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes a <paramref name="driverCommand"/> with the provided <paramref name="parameters"/>
            </summary>
            <param name="driverCommand"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="P:TestProject.SDK.Drivers.IOSDriver`1.ExceptionHandler">
            <summary>
            The custom exception handler
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.IOSDriver`1.TestProject">
            <summary>
            Gives access to TestProject-supplied actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.IOSDriver`1.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds an iOS element using <paramref name="by"/> search criteria
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="T:TestProject.SDK.Drivers.WebDriver">
            <summary>
            TestProject Web Driver
            </summary>
        </member>
        <member name="P:TestProject.SDK.Drivers.WebDriver.ExceptionHandler">
            <summary>
            The custom exception handler
            </summary>
        </member>
        <member name="P:TestProject.SDK.Drivers.WebDriver.Timeout">
            <summary>
            Changes the timeout on various TestProject actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.WebDriver.Execute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes a <paramref name="driverCommand"/> with the provided <paramref name="parameters"/>
            </summary>
            <param name="driverCommand"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Drivers.WebDriver.TestProject">
            <summary>
            Gives access to TestProject-supplied actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Drivers.WebDriver.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds a web element using <paramref name="by"/> search criteria
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="T:TestProject.SDK.ExecutionResult">
            <summary>
            Code block execution result
            </summary>
        </member>
        <member name="T:TestProject.SDK.Interfaces.ICodeBlock">
            <summary>
            Internal interface representing all actions and tests.
            </summary>
        </member>
        <member name="T:TestProject.SDK.Interfaces.IDriver">
            <summary>
            Internal interface implemented by all test drivers.
            </summary>
        </member>
        <member name="T:TestProject.SDK.PageObjects.PageFactory">
            <summary>
            Provides the ability to produce Page Objects modeling a page. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:TestProject.SDK.PageObjects.PageFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TestProject.SDK.PageObjects.PageFactory"/> class.
            Private constructor prevents a default instance from being created.
            </summary>
        </member>
        <member name="M:TestProject.SDK.PageObjects.PageFactory.InitElements``1(OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes the elements in the Page Object with the given type.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of the Page Object class.</typeparam>
            <param name="driver">The <see cref="T:OpenQA.Selenium.IWebDriver"/> instance used to populate the page.</param>
            <returns>An instance of the Page Object class with the elements initialized.</returns>
            <remarks>
            The class used in the <typeparamref name="T"/> argument must have a public constructor
            that takes a single argument of type <see cref="T:OpenQA.Selenium.IWebDriver"/>. This helps to enforce
            best practices of the Page Object pattern, and encapsulates the driver into the Page
            Object so that it can have no external WebDriver dependencies.
            </remarks>
            <exception cref="T:System.ArgumentException">
            thrown if no constructor to the class can be found with a single IWebDriver argument
            <para>-or-</para>
            if a field or property decorated with the <see cref="T:SeleniumExtras.PageObjects.FindsByAttribute"/> is not of type
            <see cref="T:OpenQA.Selenium.IWebElement"/> or IList{IWebElement}.
            </exception>
        </member>
        <member name="M:TestProject.SDK.PageObjects.PageFactory.InitElements``1(SeleniumExtras.PageObjects.IElementLocator)">
            <summary>
            Initializes the elements in the Page Object with the given type.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of the Page Object class.</typeparam>
            <param name="locator">The <see cref="T:SeleniumExtras.PageObjects.IElementLocator"/> implementation that
            determines how elements are located.</param>
            <returns>An instance of the Page Object class with the elements initialized.</returns>
            <remarks>
            The class used in the <typeparamref name="T"/> argument must have a public constructor
            that takes a single argument of type <see cref="T:OpenQA.Selenium.IWebDriver"/>. This helps to enforce
            best practices of the Page Object pattern, and encapsulates the driver into the Page
            Object so that it can have no external WebDriver dependencies.
            </remarks>
            <exception cref="T:System.ArgumentException">
            thrown if no constructor to the class can be found with a single IWebDriver argument
            <para>-or-</para>
            if a field or property decorated with the <see cref="T:SeleniumExtras.PageObjects.FindsByAttribute"/> is not of type
            <see cref="T:OpenQA.Selenium.IWebElement"/> or IList{IWebElement}.
            </exception>
        </member>
        <member name="M:TestProject.SDK.PageObjects.PageFactory.InitElements(OpenQA.Selenium.ISearchContext,System.Object)">
            <summary>
            Initializes the elements in the Page Object.
            </summary>
            <param name="driver">The driver used to find elements on the page.</param>
            <param name="page">The Page Object to be populated with elements.</param>
            <exception cref="T:System.ArgumentException">
            thrown if a field or property decorated with the <see cref="T:SeleniumExtras.PageObjects.FindsByAttribute"/> is not of type
            <see cref="T:OpenQA.Selenium.IWebElement"/> or IList{IWebElement}.
            </exception>
        </member>
        <member name="M:TestProject.SDK.PageObjects.PageFactory.InitElements(OpenQA.Selenium.ISearchContext,System.Object,SeleniumExtras.PageObjects.IPageObjectMemberDecorator)">
            <summary>
            Initializes the elements in the Page Object.
            </summary>
            <param name="driver">The driver used to find elements on the page.</param>
            <param name="page">The Page Object to be populated with elements.</param>
            <param name="decorator">The <see cref="T:SeleniumExtras.PageObjects.IPageObjectMemberDecorator"/> implementation that
            determines how Page Object members representing elements are discovered and populated.</param>
            <exception cref="T:System.ArgumentException">
            thrown if a field or property decorated with the <see cref="T:SeleniumExtras.PageObjects.FindsByAttribute"/> is not of type
            <see cref="T:OpenQA.Selenium.IWebElement"/> or IList{IWebElement}.
            </exception>
        </member>
        <member name="M:TestProject.SDK.PageObjects.PageFactory.InitElements(System.Object,SeleniumExtras.PageObjects.IElementLocator)">
            <summary>
            Initializes the elements in the Page Object.
            </summary>
            <param name="page">The Page Object to be populated with elements.</param>
            <param name="locator">The <see cref="T:SeleniumExtras.PageObjects.IElementLocator"/> implementation that
            determines how elements are located.</param>
            <exception cref="T:System.ArgumentException">
            thrown if a field or property decorated with the <see cref="T:SeleniumExtras.PageObjects.FindsByAttribute"/> is not of type
            <see cref="T:OpenQA.Selenium.IWebElement"/> or IList{IWebElement}.
            </exception>
        </member>
        <member name="M:TestProject.SDK.PageObjects.PageFactory.InitElements(System.Object,SeleniumExtras.PageObjects.IElementLocator,SeleniumExtras.PageObjects.IPageObjectMemberDecorator)">
            <summary>
            Initializes the elements in the Page Object.
            </summary>
            <param name="page">The Page Object to be populated with elements.</param>
            <param name="locator">The <see cref="T:SeleniumExtras.PageObjects.IElementLocator"/> implementation that
            determines how elements are located.</param>
            <param name="decorator">The <see cref="T:SeleniumExtras.PageObjects.IPageObjectMemberDecorator"/> implementation that
            determines how Page Object members representing elements are discovered and populated.</param>
            <exception cref="T:System.ArgumentException">
            thrown if a field or property decorated with the <see cref="T:SeleniumExtras.PageObjects.FindsByAttribute"/> is not of type
            <see cref="T:OpenQA.Selenium.IWebElement"/> or IList{IWebElement}.
            </exception>
        </member>
        <member name="T:TestProject.SDK.PageObjects.TestProjectElementLocator">
            <summary>
            A default locator for elements for use with the <see cref="T:TestProject.SDK.PageObjects.PageFactory"/>. This locator
            implements no retry logic for elements not being found, nor for elements being stale.
            </summary>
        </member>
        <member name="M:TestProject.SDK.PageObjects.TestProjectElementLocator.#ctor(OpenQA.Selenium.ISearchContext)">
            <summary>
            Initializes a new instance of the <see cref="T:TestProject.SDK.PageObjects.TestProjectElementLocator"/> class.
            </summary>
            <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext"/> used by this locator
            to locate elements.</param>
        </member>
        <member name="P:TestProject.SDK.PageObjects.TestProjectElementLocator.SearchContext">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.ISearchContext"/> to be used in locating elements.
            </summary>
        </member>
        <member name="M:TestProject.SDK.PageObjects.TestProjectElementLocator.LocateElement(System.Collections.Generic.IEnumerable{OpenQA.Selenium.By})">
            <summary>
            Locates an element using the given list of <see cref="T:OpenQA.Selenium.By"/> criteria.
            </summary>
            <param name="bys">The list of methods by which to search for the element.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebElement"/> which is the first match under the desired criteria.</returns>
        </member>
        <member name="M:TestProject.SDK.PageObjects.TestProjectElementLocator.LocateElements(System.Collections.Generic.IEnumerable{OpenQA.Selenium.By})">
            <summary>
            Locates a list of elements using the given list of <see cref="T:OpenQA.Selenium.By"/> criteria.
            </summary>
            <param name="bys">The list of methods by which to search for the elements.</param>
            <returns>A list of all elements which match the desired criteria.</returns>
        </member>
        <member name="T:TestProject.SDK.Remoting.ActionExecutionResponse">
            <summary>
            Response for TestProject action execution
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.ActionExecutionResponse.ResultType">
            <summary>
            Result type
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.ActionExecutionResponse.Message">
            <summary>
            Result message
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.ActionExecutionResponse.Outputs">
            <summary>
            Execution output fields
            </summary>
        </member>
        <member name="M:TestProject.SDK.Remoting.ActionExecutionResponse.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:TestProject.SDK.Remoting.ActionExecutionResponse.GetHashCode">
            <inheritdoc />
        </member>
        <member name="P:TestProject.SDK.Remoting.ActionExecutionResponse.Passed">
            <summary>
            indicates execution was successful
            </summary>
        </member>
        <member name="T:TestProject.SDK.Remoting.ActionProxy">
            <summary>
             Action proxy descriptor Generated by TestProject to execute actions from within Tests
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.ActionProxy.Descriptor">
            <summary>
            a descriptor object needed to Execute this Addon proxy
            </summary>
        </member>
        <member name="M:TestProject.SDK.Remoting.ActionProxy.#ctor">
            <summary>
            Creates an empty ActionProxy
            </summary>
        </member>
        <member name="M:TestProject.SDK.Remoting.ActionProxy.#ctor(TestProject.SDK.Remoting.ProxyDescriptor)">
            <summary>
            Creates an ActionProxy with a specific descriptor
            </summary>
        </member>
        <member name="T:TestProject.SDK.Remoting.AgentCloudSettingsAdapter">
            <summary>
            This class changes the DriverType to a cloud DT if applicable, and restores it to the original value when disposed
            </summary>
        </member>
        <member name="T:TestProject.SDK.Remoting.AgentExecutionContext">
            <summary>
            Contains information that is present while agent is executing a test or job
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.AgentExecutionContext.Settings">
            <summary>
            The settings that were used to initialize the driver
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.AgentExecutionContext.AgentId">
            <summary>
            Agent's ID
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.AgentExecutionContext.DeviceId">
            <summary>
            The mobile device's ID
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.AgentExecutionContext.AdbPath">
            <summary>
            ANDROID_HOME path
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.AgentExecutionContext.ExecutionParameters">
            <summary>
            Returns a list of execution parameters
            <returns>A list of execution parameters</returns>
            </summary>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentExecutionContext.Equals(TestProject.SDK.Remoting.AgentExecutionContext)">
            <summary>
            Compares between two AgentExecutionContext objects
            </summary>
            <param name="other"></param>
            <returns>True- in case they are equals, false- otherwise</returns>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentExecutionContext.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentExecutionContext.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:TestProject.SDK.Remoting.AgentProxy.IsDevMode">
            <summary>
            Returns true when using Runner otherwise false
            </summary>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentProxy.ExecuteAddonProxy(TestProject.SDK.Remoting.ActionProxy)">
            <summary>
            Executes an action by proxy
            </summary>
            <param name="proxy">Proxy to the action</param>
            <returns>Action execution result</returns>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentProxy.ExecuteAddonProxy(TestProject.SDK.Remoting.ActionProxy,OpenQA.Selenium.By)">
            <summary>
            Executes an action by proxy
            </summary>
            <param name="proxy">Proxy to the action</param>
            <param name="by">Locator strategy for the action element</param>
            <returns>Action execution result</returns>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentProxy.GetExecutionContext">
            <summary>
            gets the current execution context (Browser/Device)
            </summary>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentProxy.ProcessRequest(TestProject.SDK.HttpMethod,System.String,System.String)">
            <summary>
            Process REST request
            </summary>
            <param name="method">REST method</param>
            <param name="path">Relative API route path</param>
            <param name="body">Request body</param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentProxy.ProcessRequest(TestProject.SDK.HttpMethod,System.String,System.String,System.String)">
            <summary>
            Process REST request
            </summary>
            <param name="method">REST method</param>
            <param name="path">Relative API route path</param>
            <param name="token">Authorization Token to provide header</param>
            <param name="body">Request body</param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentProxy.SendExecutionRequest(System.String,System.String)">
            <summary>
            Executes a REST request 
            </summary>
            <param name="addonId">addon to execute</param>
            <param name="body">Request body</param>
            <returns>Action execution response</returns>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentProxy.SendRequest(TestProject.SDK.HttpMethod,System.String,System.String,System.String)">
            <summary>
            Executes a REST request
            </summary>
            <param name="method">REST method</param>
            <param name="path">Relative API route path</param>
            <param name="token">Security token</param>
            <param name="body">Request body</param>
            <returns>Operation result</returns>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentProxy.StartDevMode(System.String,TestProject.SDK.Settings.DriverSettings,System.String)">
            <summary>
            Puts Agent into Development mode
            </summary>
            <param name="developerToken">Developer security token</param>
            <param name="driverSettings">Automation session settings</param>
            <param name="sdkVersion">SDK Version</param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentProxy.TakeScreenshotForAssertion">
            <summary>
            Takes a screenshot of the current step
            </summary>
            <returns>Screenshot Execution result</returns>
        </member>
        <member name="M:TestProject.SDK.Remoting.AgentProxy.OverrideReportTarget(System.String,System.String)">
            <summary>
            Override current target's project/job names.
            If either of these isn't overridden, we will try to infer its value from calling test
            </summary>
            <param name="projectName">Overriding project name</param>
            <param name="jobName">Overriding job name</param>
        </member>
        <member name="T:TestProject.SDK.Remoting.Client.RemoteClient">
            <summary>
            Default IRemoteClient implementation
            </summary>
        </member>
        <member name="T:TestProject.SDK.Remoting.OperationResult">
            <summary>
            represents the result of an agent's operation
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.OperationResult.Passed">
            <summary>
            Indicates whether the operation was successful
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.OperationResult.Message">
            <summary>
            Operation result message
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.OperationResult.Exception">
            <summary>
            Exception thrown if operation failed
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.OperationResult.Data">
            <summary>
            Additional data returned from the operation
            </summary>
        </member>
        <member name="M:TestProject.SDK.Remoting.OperationResult.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:TestProject.SDK.Remoting.OperationResult.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:TestProject.SDK.Remoting.ProxyDescriptor">
            <summary>
            A descriptor used by Addon Proxy libraries to communicate with agent
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.ProxyDescriptor.Id">
            <summary>
            Addon ID
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.ProxyDescriptor.ClassName">
            <summary>
            Addon class name
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.ProxyDescriptor.Language">
            <summary>
            Addon language
            </summary>
        </member>
        <member name="P:TestProject.SDK.Remoting.ProxyDescriptor.Parameters">
            <summary>
            Parameters sent to agent for executing proxy
            </summary>
        </member>
        <member name="M:TestProject.SDK.Remoting.ProxyDescriptor.#ctor">
            <summary>
            Creates an empty descriptor
            </summary>
        </member>
        <member name="M:TestProject.SDK.Remoting.ProxyDescriptor.#ctor(System.String,System.String,System.String,TestProject.Common.Enums.CodeBlockLanguage)">
            <summary>
            Creates a descriptor with all parameters
            This constructor is now obsolete.
            </summary>
            <param name="id">Proxy id</param>
            <param name="fileHash">Addon file hash</param>
            <param name="className">Addon class to execute</param>
            <param name="language">Addon language</param>
        </member>
        <member name="M:TestProject.SDK.Remoting.ProxyDescriptor.#ctor(System.String,System.String,TestProject.Common.Enums.CodeBlockLanguage)">
            <summary>
            Creates a descriptor with all parameters
            </summary>
            <param name="id">Proxy id</param>
            <param name="className">Addon class to execute</param>
            <param name="language">Addon language</param>
        </member>
        <member name="M:TestProject.SDK.Remoting.ProxyDescriptor.#ctor(TestProject.SDK.Remoting.ProxyDescriptor)">
            <summary>
            This ctor is used by tests to clone descriptors for verification
            </summary>
            <param name="other"></param>
        </member>
        <member name="T:TestProject.SDK.Reporters.ActionReporter">
            <summary>
            Allows to send specific reports from an addon action
            </summary>
        </member>
        <member name="M:TestProject.SDK.Reporters.ExternalExecutionReporter.RedactRequired(System.String)">
             Checks whether redaction is required.
            
             @param executor  Executor instance that executed the command
             @param command   Command sent to the Driver
             @param elementId The ID of the element that the command was executed on.
             @return True if it is required, otherwise False;
        </member>
        <member name="M:TestProject.SDK.Reporters.ExternalExecutionReporter.IsAndroidPasswordElement(System.String)">
             Checks whether the element command invoked on, is a password element.
             For example: android.widget.TextView with password attribute 'true'
            
             @param executor  Executor instance that executed the command
             @param sessionId Session ID where the command was executed
             @param elementId The ID of the element that the command was executed on.
             @return True if the element is a password element, otherwise False.
        </member>
        <member name="M:TestProject.SDK.Reporters.ExternalExecutionReporter.IsSecuredElement(System.String)">
             Checks whether the element command invoked on, is a secure element.
             For example:
             HTML input with 'type' attribute set to 'password'
             With XCUITest, on iOS an element type of 'XCUIElementTypeSecureTextField'
            
             @param executor  Executor instance that executed the command
             @param sessionId Session ID where the command was executed
             @param elementId The ID of the element that the command was executed on.
             @return True if the element is a secure element, otherwise False.
        </member>
        <member name="T:TestProject.SDK.Reporters.Reporter">
            <summary>
            Allows to send specific reports from a code block
            </summary>
        </member>
        <member name="P:TestProject.SDK.Reporters.Reporter.Result">
            <summary>
            Reported result
            </summary>
        </member>
        <member name="T:TestProject.SDK.Reporters.TestReporter">
            <summary>
            Allows to send step reports from a test
            </summary>
        </member>
        <member name="P:TestProject.SDK.Reporters.TestReporter.StepReports">
            <summary>
            List of steps reported during the test
            </summary>
        </member>
        <member name="P:TestProject.SDK.Reporters.TestReporter.DefaultScreenshotBehavior">
            <summary>
            Default screenshot taking behavior
            </summary>
        </member>
        <member name="M:TestProject.SDK.Reporters.TestReporter.Step(System.String,System.Boolean)">
            <summary>
            Reports a Step of a Test
            </summary>
            <param name="description">Step description</param>
            <param name="condition">Condition to evaluate failure or success. A FailureException is thrown if condition is false</param>
        </member>
        <member name="M:TestProject.SDK.Reporters.TestReporter.Step(System.String,System.Boolean,TestProject.Common.Enums.TakeScreenshotConditionType)">
            <summary>
            Reports a Step of a Test defining when to take a screenshot
            </summary>
        </member>
        <member name="M:TestProject.SDK.Reporters.TestReporter.Step(System.String,System.String,System.String,System.Boolean,TestProject.Common.Enums.TakeScreenshotConditionType)">
            <summary>
            Reports a Step of a Test with additional failure message, success message, condition and when to take a screenshot
            </summary>
            <param name="description">Step description</param>
            <param name="failureMessage">Message that will appear in reports if Step fails</param>
            <param name="successMessage">Message that will appear in reports if Step succeeds</param>
            <param name="condition">Condition to evaluate failure or success. A FailureException is thrown if condition is false</param>
            <param name="takeScreenshot">Specifies when reporter will take a screenshot</param>
        </member>
        <member name="M:TestProject.SDK.Reporters.TestReporter.Step(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Object,System.Boolean)">
            <summary>
            Reports a Step of a Test with <paramref name="commandName"/>, <paramref name="parameters"/>, <paramref name="result"/> and whether the step was passed or not
            </summary>
            <param name="commandName"></param>
            <param name="parameters"></param>
            <param name="result"></param>
            <param name="passed"></param>
        </member>
        <member name="T:TestProject.SDK.Runner">
            <summary>
            A utility class to debug Tests and Actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Runner.Run(TestProject.SDK.Interfaces.ICodeBlock,System.Boolean)">
            <summary>
            Runs a test/action given by <paramref name="codeBlock"/>
            </summary>
            <param name="codeBlock">Represents the test/action to run</param>
            <param name="useDefaultValues">If true, will run the test/action with its default values</param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Runner.Run(TestProject.SDK.Interfaces.ICodeBlock,OpenQA.Selenium.By,System.Boolean,System.Int32,System.String)">
            <summary>
            Runs a test/action given by <paramref name="codeBlock"/> with an optional: <paramref name="by"/> search criteria, <paramref name="useDefaultValues"/> and <paramref name="timeout"/>
            </summary>
            <param name="codeBlock"></param>
            <param name="by"></param>
            <param name="useDefaultValues"></param>
            <param name="timeout"></param>
            <param name="testName"></param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Runner.GetDriver">
            <summary>
            Returns a TestProject driver that matches the requested platform
            </summary>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Runner.Dispose">
            <summary>
            Disposing all used resources
            </summary>
        </member>
        <member name="T:TestProject.SDK.RunnerBuilder">
            <summary>
            A builder for constructing a new runner.
            By Default, the runner is created with the following settings:
            * Generic execution (no browser/device).
            * All reporting to TestProject enabled.
            * Project/Job names will be inferred automatically.
            </summary>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.#ctor(System.String)">
            <summary>
            Constructs a new builder.
            By Default, the runner is created with the following settings:
            * Generic execution (no browser/device).
            * All reporting to TestProject enabled.
            * Project/Job names will be inferred automatically.
            </summary>
            <param name="token">Developer token used to open dev session</param>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.Build">
            <summary>
            Builds the runner
            </summary>
            <returns>A new <see cref="T:TestProject.SDK.Runner"/></returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.WithToken(System.String)">
            <summary>
            Sets the developer token
            </summary>
            <param name="token">New developer token to use</param>
            <returns>This builder</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.WithOptions(OpenQA.Selenium.DriverOptions)">
            <summary>
            Session will be created with the requested custom options
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.WithReportsDisabled">
            <summary>
            Disables submitting reports to TestProject.
            </summary>
            <returns>This builder</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.WithProjectName(System.String)">
            <summary>
            Sets the name of the project under which the report will be created
            </summary>
            <param name="projectName">Requested project name. Set this to null to detect project name automatically.</param>
            <returns>This builder</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.WithJobName(System.String)">
            <summary>
            Sets the name of the job under which the report will be created
            </summary>
            <param name="jobName">Requested job name. Set this to null to detect job name automatically.</param>
            <returns>This builder</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.WithDriverCommandReportingDisabled">
            <summary>
            Disables automatic driver commands reporting.
            </summary>
            <returns>This builder</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.WithDriverCommandReportingEnabled">
            <summary>
            Enables automatic driver commands reporting.
            </summary>
            <returns>This builder</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.AsGeneric">
            <summary>
            Builder will create a runner for running a Generic (driver-less) Test or Action
            </summary>
            <returns>This builder</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.AsAndroid(System.String,System.String,System.String)">
            <summary>
            Builder will create a runner for running an Android Mobile Test or Action
            </summary>
            <param name="deviceUDID">Target device UDID</param>
            <param name="androidPackage">Android package to execute</param>
            <param name="androidActivity">Activity within the package</param>
            <returns>This builder</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.AsAndroidWeb(System.String)">
            <summary>
            Builder will create a runner for running a Web Test or Action on an Android Mobile device
            </summary>
            <param name="deviceUdid">Target device UDID</param>
            <returns>Runner instance</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.AsIOS(System.String,System.String,System.String)">
            <summary>
            Builder will create a runner for running an Android Mobile Test or Action
            </summary>
            <param name="deviceUDID">Target device UDID</param>
            <param name="deviceName">Target device name</param>
            <param name="appleBundleId">Apple application bundle ID</param>
            <returns>Runner instance</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.AsIOSWeb(System.String,System.String)">
            <summary>
            Builder will create a runner for running a Web Test or Action on an iOS Mobile device
            </summary>
            <param name="deviceUDID">Target device UDID</param>
            <param name="deviceName">Target device name</param>
            <returns>Runner instance</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerBuilder.AsWeb(TestProject.Common.Enums.AutomatedBrowserType)">
            <summary>
            Builder will create a runner for running a Web Test or Action
            </summary>
            <param name="automatedBrowserType">Type of browser to use for automation</param>
            <returns>Runner instance</returns>
        </member>
        <member name="T:TestProject.SDK.RunnerFactory">
            <summary>
            A factory used to generate <see cref="T:TestProject.SDK.Runner"/> instances
            </summary>
        </member>
        <member name="P:TestProject.SDK.RunnerFactory.Instance">
            <summary>
            An instance of a RunnerFactory
            </summary>
        </member>
        <member name="M:TestProject.SDK.RunnerFactory.Create(TestProject.Common.DTO.Instructions.CodeBlockInstructions)">
            <summary>
            Creates a runner instance from instructions sent by agent (internally visible only)
            </summary>
            <param name="instructions">Instructions provided by wrapper</param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.RunnerFactory.Create(System.String)">
            <summary>
            Creates a Runner to debug a Test or Action
            </summary>
            <param name="developerToken">Developer token obtained from TestProject application</param>
            <returns>Runner instance</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerFactory.Create(System.String,TestProject.SDK.Settings.DriverSettings)">
            <summary>
            Creates a Runner to debug a Test or Action based on provided <paramref name="driverSettings"/>
            </summary>
            <param name="developerToken">Developer token obtained from TestProject application</param>
            <param name="driverSettings">Settings for the debug session</param>
            <returns>Runner instance</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerFactory.CreateAndroid(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a Runner object for debugging an Android mobile Test or Action
            </summary>
            <param name="developerToken">Developer token obtained from TestProject application</param>
            <param name="deviceUDID">Target device UDID</param>
            <param name="androidPackage">Android package to execute</param>
            <param name="androidActivity">Activity within the package</param>
            <returns>Runner instance</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerFactory.CreateAndroidWeb(System.String,System.String,TestProject.Common.Enums.BrowserName)">
            <summary>
            Creates a Runner object for debugging a Web Test or Action on an Android Mobile device
            </summary>
            <param name="developerToken">Developer token obtained from TestProject application</param>
            <param name="deviceUDID">Target device UDID</param>
            <param name="browserName">Name of the browser on the android device</param>
            <returns>Runner instance</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerFactory.CreateIOS(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a Runner object for debugging an iOS mobile Test or Action
            </summary>
            <param name="developerToken">Developer token obtained from TestProject application</param>
            <param name="deviceUDID">Target device UDID</param>
            <param name="deviceName">Target device name</param>
            <param name="appleBundleId">Apple application bundle ID</param>
            <returns>Runner instance</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerFactory.CreateIOSWeb(System.String,System.String,System.String)">
            <summary>
            Creates a Runner object for debugging a Web Test or Action on an iOS mobile device
            </summary>
            <param name="developerToken">Developer token obtained from TestProject application</param>
            <param name="deviceUDID">Target device UDID</param>
            <param name="deviceName">Target device name</param>
            <returns>Runner instance</returns>
        </member>
        <member name="M:TestProject.SDK.RunnerFactory.CreateWeb(System.String,TestProject.Common.Enums.AutomatedBrowserType)">
            <summary>
            Creates a Runner object for debugging a Web Test or Action
            </summary>
            <param name="developerToken">Developer token obtained from TestProject application</param>
            <param name="automatedBrowserType">Type of browser to use for automation</param>
            <returns>Runner instance</returns>
        </member>
        <member name="T:TestProject.SDK.Settings.DriverSettings">
            <summary>
            The settings used to initialize the driver
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.DriverSettings.DriverType">
            <summary>
            Type of driver to create
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.DriverSettings.DesiredCapabilities">
            <summary>
            Additional capabilities requested for driver creation
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.DriverSettings.DesiredCapabilitiesObject">
            <summary>
            Additional capabilities requested for driver creation
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.DriverSettings.DeviceUdid">
            <summary>
            The device's Unique ID
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.DriverSettings.DeviceName">
            <summary>
            The device's name
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.DriverSettings.MobileSettings">
            <summary>
            Settings required to execute a mobile test
            </summary>
        </member>
        <member name="M:TestProject.SDK.Settings.DriverSettings.#ctor">
            <summary>
            Creates an empty DriverSettings
            </summary>
        </member>
        <member name="M:TestProject.SDK.Settings.DriverSettings.#ctor(TestProject.Common.Enums.DriverType)">
            <summary>
            Creates a driver settings with a specific driver types
            </summary>
            <param name="driverType">type of driver to create</param>
        </member>
        <member name="M:TestProject.SDK.Settings.DriverSettings.#ctor(TestProject.Common.Enums.DriverType,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Creates a driver settings with a specific driver types and additional capabilities
            </summary>
            <param name="driverType">type of driver to create</param>
            <param name="desiredCapabilities">additional desired capabilities</param>
        </member>
        <member name="M:TestProject.SDK.Settings.DriverSettings.IsDriverless">
            <summary>
            Indicates if the settings are for generic-type code blocks
            </summary>
        </member>
        <member name="M:TestProject.SDK.Settings.DriverSettings.IsMobile">
            <summary>
            Indicates if the settings are for mobile code blocks
            </summary>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Settings.DriverSettings.IsMobileWeb">
            <summary>
            Indicates if the settings are for web on mobile code blocks
            </summary>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Settings.DriverSettings.IsWeb">
            <summary>
            Indicates if the settings are for web code blocks
            </summary>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Settings.DriverSettings.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:TestProject.SDK.Settings.DriverSettings.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:TestProject.SDK.Settings.MobileDriverSettings">
            <summary>
            Custom settings on how to start a mobile driver
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.MobileDriverSettings.AppGuid">
            <summary>
            the mobile application's GUID stored on TestProject server
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.MobileDriverSettings.AndroidPackage">
            <summary>
            Android package to execute before test
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.MobileDriverSettings.AndroidActivity">
            <summary>
            Android activity to execute before test
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.MobileDriverSettings.AppleBundleId">
            <summary>
            Apple bundle ID to execute before test
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.MobileDriverSettings.CommandTimeout">
            <summary>
            Appium command timeout
            </summary>
        </member>
        <member name="P:TestProject.SDK.Settings.MobileDriverSettings.InstallApp">
            <summary>
            Specifies whether app should be reinstalled
            </summary>
        </member>
        <member name="T:TestProject.SDK.TestProjectCapabilityType">
            <summary>
            Provides common capabilities supplied by TestProject
            </summary>
        </member>
        <member name="F:TestProject.SDK.TestProjectCapabilityType.CloudUrl">
            <summary>
            Specify the cloud URL for executions on SauceLabs/BrowserStack
            </summary>
        </member>
        <member name="T:TestProject.SDK.Tests.Helpers.AndroidTestHelper">
             <summary>
            Provides access to driver and other Android actions resources 
             </summary>
        </member>
        <member name="T:TestProject.SDK.Tests.Helpers.GenericTestHelper">
            <summary>
            Provides access to various generic resources 
            </summary>
        </member>
        <member name="P:TestProject.SDK.Tests.Helpers.GenericTestHelper.Reporter">
            <summary>
            An object used to report steps and additional information from the test
            </summary>
        </member>
        <member name="P:TestProject.SDK.Tests.Helpers.GenericTestHelper.Timeout">
            <summary>
            Sets the timeout for TestProject actions
            </summary>
        </member>
        <member name="M:TestProject.SDK.Tests.Helpers.GenericTestHelper.ExecuteProxy(TestProject.SDK.Remoting.ActionProxy)">
            <summary>
            Executes an Action proxy
            </summary>
            <param name="proxy">An instance of <see cref="T:TestProject.SDK.Remoting.ActionProxy"/>></param>
            <returns>Addon's Execution result</returns>
        </member>
        <member name="M:TestProject.SDK.Tests.Helpers.GenericTestHelper.ExecuteProxy(TestProject.SDK.Remoting.ActionProxy,OpenQA.Selenium.By)">
            <summary>
            Executes an Element Action proxy
            </summary>
            <param name="proxy">An instance of <see cref="T:TestProject.SDK.Remoting.ActionProxy"/>></param>
            <param name="by">Locator strategy for the action element</param>
            <returns></returns>
        </member>
        <member name="M:TestProject.SDK.Tests.Helpers.GenericTestHelper.TestProject">
            <summary>
            Provides access to various generic TestProject actions
            </summary>
            <returns></returns>
        </member>
        <member name="T:TestProject.SDK.Tests.Helpers.IOSTestHelper">
             <summary>
            Provides access to driver and other iOS actions resources 
             </summary>
        </member>
        <member name="M:TestProject.SDK.Tests.Helpers.ProxyExecutor.ExecuteProxy(TestProject.SDK.Remoting.ActionProxy)">
            <summary>
            Executes an Action proxy
            </summary>
            <param name="proxy">An instance of <see cref="T:TestProject.SDK.Remoting.ActionProxy"/>></param>
            <returns>Addon's Execution result</returns>
        </member>
        <member name="M:TestProject.SDK.Tests.Helpers.ProxyExecutor.ExecuteProxy(TestProject.SDK.Remoting.ActionProxy,OpenQA.Selenium.By)">
            <summary>
            Executes an Element Action proxy
            </summary>
            <param name="proxy">An instance of <see cref="T:TestProject.SDK.Remoting.ActionProxy"/>></param>
            <param name="by">Locator strategy for the action element</param>
            <returns></returns>
        </member>
        <member name="T:TestProject.SDK.Tests.Helpers.TestHelperEx`1">
            <summary>
            Provides access to driver and other test resources 
            </summary>
            <typeparam name="TDriver">Driver type</typeparam>
        </member>
        <member name="P:TestProject.SDK.Tests.Helpers.TestHelperEx`1.Reporter">
            <summary>
            A reporter instance to report test steps
            </summary>
        </member>
        <member name="M:TestProject.SDK.Tests.Helpers.TestHelperEx`1.ExecuteProxy(TestProject.SDK.Remoting.ActionProxy)">
            <summary>
            Executes an Action proxy
            </summary>
            <param name="proxy">An instance of <see cref="T:TestProject.SDK.Remoting.ActionProxy"/>></param>
            <returns>Addon's Execution result</returns>
        </member>
        <member name="M:TestProject.SDK.Tests.Helpers.TestHelperEx`1.ExecuteProxy(TestProject.SDK.Remoting.ActionProxy,OpenQA.Selenium.By)">
            <summary>
            Executes an Element Action proxy
            </summary>
            <param name="proxy">An instance of <see cref="T:TestProject.SDK.Remoting.ActionProxy"/>></param>
            <param name="by">Locator strategy for the action element</param>
            <returns></returns>
        </member>
        <member name="T:TestProject.SDK.Tests.Helpers.WebTestHelper">
             <summary>
            Provides access to driver and other web actions resources 
             </summary>
        </member>
        <member name="T:TestProject.SDK.Tests.IAndroidTest">
            <summary>
            Represents an Android Test
            </summary>
        </member>
        <member name="M:TestProject.SDK.Tests.IAndroidTest.Execute(TestProject.SDK.Tests.Helpers.AndroidTestHelper)">
            <summary>
            Execution method for this test
            </summary>
            <param name="helper">A helper instance providing access to driver and other test resources</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Tests.IGenericTest">
            <summary>
            Represents a Generic (Driverless) test
            </summary>
        </member>
        <member name="M:TestProject.SDK.Tests.IGenericTest.Execute(TestProject.SDK.Tests.Helpers.GenericTestHelper)">
            <summary>
            Execution method for this test
            </summary>
            <param name="helper">A helper instance providing access to various test resources</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Tests.IIOSTest">
            <summary>
            Represents an iOS Test
            </summary>
        </member>
        <member name="M:TestProject.SDK.Tests.IIOSTest.Execute(TestProject.SDK.Tests.Helpers.IOSTestHelper)">
            <summary>
            Execution method for this test
            </summary>
            <param name="helper">A helper instance providing access to driver and other test resources</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Tests.ITestEx`1">
            <summary>
            Represents a custom Driver-Based Test
            </summary>
            <typeparam name="TDriver">Driver Type</typeparam>
        </member>
        <member name="M:TestProject.SDK.Tests.ITestEx`1.Execute(TestProject.SDK.Tests.Helpers.TestHelperEx{`0})">
            <summary>
            Execution method for this test
            </summary>
            <param name="helper">A helper instance providing access to driver and other test resources</param>
            <returns>Execution Result</returns>
        </member>
        <member name="T:TestProject.SDK.Tests.IWebTest">
            <summary>
            Represents a Web Test
            </summary>
        </member>
        <member name="M:TestProject.SDK.Tests.IWebTest.Execute(TestProject.SDK.Tests.Helpers.WebTestHelper)">
            <summary>
            Execution method for this test
            </summary>
            <param name="helper">A helper instance providing access to driver and other test resources</param>
            <returns>Execution Result</returns>
        </member>
    </members>
</doc>
